<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis map 선언 표시 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
              "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.pknu.project.comment.dao.CommentDao">
	
	<select id="getComments" parameterType="HashMap" resultType="comment">
		SELECT c.* 
		FROM (	SELECT commentNum, id, commentContent, commentDate, articleNum, depth, @rownum:=@rownum+1 as rn 
				FROM comments, (SELECT @rownum:=0) vars 
				WHERE boardNum=#{boardNum} AND articleNum=#{articleNum} 
				ORDER BY path) c 
		WHERE rn BETWEEN 1 AND #{commentRow}
	</select>
	
	<!-- 코멘트 쓰기 -->
	<insert id="insertComment" parameterType="comment">
		insert into comments values(null, #{id}, #{commentContent},now(),#{articleNum}, #{boardNum}, 0, '', 0);
		update comments set path=commentNum where commentNum = last_insert_id();
	</insert>
	
	<!-- 코멘트 갯수 -->
	<select id="commentCount" parameterType="HashMap" resultType="int">
		select count(*) from Comments where boardNum=#{boardNum} AND articleNum=#{articleNum}
	</select>
	
	<!-- 코멘트 수정 -->
	<update id="updateComment" parameterType="HashMap">
		UPDATE Comments
		SET commentContent=#{commentContent} WHERE commentNum=#{commentNum} 
	</update>
	
	<!-- 코멘트 답글 -->
	<insert id="replyComment" parameterType="comment">
		INSERT INTO comments 
		VALUES(null, #{id}, #{commentContent}, now(), #{articleNum}, #{boardNum}, #{parentNum}, '', #{depth}+1);
		
		UPDATE comments child 
		JOIN comments parent 
		ON child.parentNum = parent.commentNum AND child.commentNum = last_insert_id() 
		SET child.path = CONCAT(parent.path, '.', child.commentNum);
	</insert>
	
	<!-- 코멘트 삭제 -->
	<delete id="deleteComment" parameterType="int">
		DELETE FROM Comments WHERE commentNum=#{commentNum}
	</delete>
</mapper>