<?xml version="1.0" encoding="UTF-8"?>
<!-- mybatis map 선언 표시 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
              "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="com.pknu.project.common.dao.BoardDao">
	<!-- #Board -->
	<select id="getBoards" parameterType="int" resultType="board">
		select * from boardList where groupNum = #{groupNum}
	</select>
	<update id="addBoardList" parameterType="HashMap"  useGeneratedKeys="true" keyColumn="boardNum" keyProperty="boardNum">
		insert into BoardList(boardName, groupNum) values(#{boardName}, #{groupNum})
	</update>
	<update id="createGroupBoard" parameterType="HashMap">
		create table `GroupBoard${groupNum}` (
		    articleNum int primary key auto_increment,
		    id varchar(300) not null,
		    title varchar(500) not null,
		    content text not null,
		    depth int not null,
		    hit int not null,
		    groupId int not null,
		    pos int not null,
		    writeDate date not null,
		    fileStatus int(1) not null,
		    boardNum int not null,
		    FOREIGN KEY(boardNum) REFERENCES BoardList(boardNum) on DELETE CASCADE
		) ENGINE=InnoDB;
	</update>
	<update id="renameBoard" parameterType="board">
		UPDATE BoardList SET boardName=#{boardName} WHERE boardNum=#{boardNum}
	</update>
	<delete id="deleteBoard" parameterType="HashMap">
		DELETE FROM BoardList WHERE boardNum = #{boardNum};
	</delete>
	
	<!-- #Article -->
	<!-- Board 글개수 가져오기 -->
	<select id="getCount" parameterType="HashMap" resultType="int">
		select count(*) from `GroupBoard${groupNum}` where boardNum = #{boardNum}
	</select>
	
	<!-- Board 목록 보기 -->
	<select id="getArticles" parameterType="HashMap" resultType="article">
		SELECT articleNum, id, title, depth, hit, date_format(writeDate, '%Y-%m-%d') as writeDate, fileStatus
        FROM (SELECT b.*, @rownum := @rownum+1 as rownum
              FROM `GroupBoard${groupNum}` b, (SELECT @rownum := 0) vars
              where boardNum = #{boardNum}
			  order by groupId desc, pos) n
		WHERE rownum between #{startRow} and #{endRow}
	</select>
	
	<!-- Board 글 상세보기 -->
	<select id="getArticle" parameterType="HashMap" resultType="article">
		SELECT * FROM `GroupBoard${groupNum}` WHERE articleNum = #{articleNum}
	</select>
	
	<select id="getFiles" parameterType="HashMap" resultType="file">
		 SELECT storedFname, f.fileNum
		 FROM filelist f, attached at 
		 WHERE f.fileNum = at.fileNum AND at.articleNum = #{articleNum}
	</select>
	
	<!-- hit 수 증가 -->
	<update id="upHit" parameterType="HashMap">
		UPDATE `GroupBoard${groupNum}` SET hit = hit + 1 WHERE articleNum=#{articleNum}
	</update>
	
	<!-- Board 새 글 쓰기 -->
	<insert id="writeArticle" parameterType="article" useGeneratedKeys="true" keyProperty="articleNum" keyColumn="articleNum">
		INSERT INTO `GroupBoard${groupNum}` (id, title, content, depth, hit, groupId, pos, writeDate, fileStatus, boardNum) 
					VALUES (#{id}, #{title}, #{content}, 0, 0, 0, 0, now(), #{fileStatus}, #{boardNum});
		update `GroupBoard${groupNum}` set groupId = articleNum where articleNum = last_insert_id();
	</insert>
	
	<!-- filelist 테이블에 업데이트 된 파일 정보 담기 -->
	<insert id="insertFile" parameterType="file">
		INSERT INTO FILELIST (fileNum, storedFname, fileLength)
		VALUES (0, #{storedFname}, #{fileLength});
		INSERT INTO Attached VALUES (last_insert_id(), #{boardNum}, #{articleNum});
	</insert>
	
	<insert id="profileOf" parameterType="file">
		INSERT INTO FILELIST (fileNum, storedFname, fileLength)
		VALUES (0, #{storedFname}, #{fileLength});
		INSERT INTO ProfileOf (last_insert_id(), #{groupNum});
	</insert>
	 
	<!-- 검색 기능 구현 -->
	<!-- 검색 -->
	<select id="getSearchedArticles" parameterType="HashMap" resultType="article">
		SELECT result.*
		FROM (SELECT searched.*, @rownum := @rownum+1 as rownum
			  FROM (SELECT * 
				    FROM `GroupBoard${groupNum}`
				    WHERE ${searchOption} LIKE CONCAT('%', '${keyword}', '%')
				    	  and boardNum = #{boardNum}
				   ) searched, (SELECT @rownum := 0) r
			  ORDER BY groupId DESC, pos) result
		WHERE rownum between 1 and 10
	</select>
	
	<!-- 검색 결과의 수 -->
	<select id="getSearchedCount" parameterType="HashMap" resultType="int">
		select count(*) from `GroupBoard${groupNum}`
		WHERE ${searchOption} LIKE CONCAT('%', #{keyword}, '%')
			  and boardNum = #{boardNum}
	</select>
	
	<!-- 답글 달기 -->
	<insert id="reply" parameterType="article" useGeneratedKeys="true" keyProperty="articleNum" keyColumn="articleNum">
		INSERT INTO `GroupBoard${groupNum}` (id, title, content, depth, hit, groupId, pos, writeDate, fileStatus, boardNum) 
					VALUES (#{id}, #{title}, #{content}, #{depth}+1, 0, #{groupId}, #{pos}+1, now(), #{fileStatus}, #{boardNum});
	</insert>
	<update id="upPos" parameterType="article">
		update `GroupBoard${groupNum}` set pos = pos+1 where groupId = #{groupId} and pos > #{pos} and boardNum=#{boardNum}
	</update>
	
	<!-- 글 삭제 -->
	<delete id="deleteArticle" parameterType="HashMap">
		DELETE FROM `GroupBoard${groupNum}`
		WHERE articleNum=#{articleNum}
	</delete>
	
	<select id="getReply" parameterType="HashMap" resultType="article">
		SELECT articleNum
		FROM `GroupBoard${groupNum}`
		WHERE groupId=#{articleNum} AND articleNum!=#{articleNum}
	</select>
	
	<select id="getEndPoses" parameterType="HashMap" resultType="int">
		SELECT pos
		FROM `GroupBoard${groupNum}`
		WHERE groupId=#{groupId} AND depth=#{depth} AND pos > ${pos}
	</select>
	
	<delete id="deleteSomeReply" parameterType="HashMap">
		DELETE FROM `GroupBoard${groupNum}`
		WHERE groupId=#{groupId} AND depth > #{depth} AND #{endPos} > pos AND pos > #{pos}
	</delete>
	
	<delete id="deleteSomeReplyAll" parameterType="HashMap">
		DELETE FROM `GroupBoard${groupNum}`
		WHERE groupId=#{groupId} AND depth > #{depth} AND pos > #{pos}
	</delete>
	
	<!-- 글 수정 -->
	<select id="updateGetArticle" parameterType="HashMap" resultType="article">
		SELECT title, content
		FROM `GroupBoard${groupNum}`
		WHERE articleNum=#{articleNum}
	</select>
	
	<update id="updateArticle" parameterType="HashMap">
		UPDATE `GroupBoard${groupNum}`
		SET title=#{title}, content=#{content}, fileStatus=#{fileStatus}
		WHERE articleNum=#{articleNum}
	</update>
	
	<delete id="someDelFile" parameterType="List">
		delete 
		from FILELIST 
		where storedFname IN
		<foreach collection="list" item="storedFname" open="(" separator="," close=")">
			#{storedFname}
		</foreach>
	</delete>
	
</mapper>